name: Build Pipeline

on: 
  push:
    branches: [ 'main' ]

env:
  GODOT_VERSION: 4.2.1
  VERSION_FILE: project.godot
  VERSION_REGEX: config\/version=\"\K[0-9.\-A-z]*
  VERSION_OLD: 0.0.0
  VERSION_NEW: 0.0.0

jobs:
  check_version_bump:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout current branch
      uses: actions/checkout@v4
      with:
        ref: ${{ github.base_ref }}

    - name: Extract old version number
      shell: bash
      run: |
        VERSION_NUMBER_OLD=`grep -Po "${{ env.VERSION_REGEX }}" ./${{ env.VERSION_FILE }}`
        echo "VERSION_OLD=$VERSION_NUMBER_OLD" >> "$GITHUB_ENV"
        echo "Old version number: $VERSION_OLD"

    - name: Checkout current branch
      uses: actions/checkout@v4

    - name: Extract new version number
      shell: bash
      run: |
        VERSION_NUMBER_NEW=`grep -Po "${{ env.VERSION_REGEX }}" ./${{ env.VERSION_FILE }}`
        echo "VERSION_NEW=$VERSION_NUMBER_NEW" >> "$GITHUB_ENV"
        echo "New version number: $VERSION_NEW"
        
    - name: Download semver script
      shell: bash
      run: |
        curl https://raw.githubusercontent.com/Ariel-Rodriguez/sh-semversion-2/main/semver2.sh -o semver2.sh
        chmod 755 ./semver2.sh
        
    - name: Compare versions
      shell: bash
      run: |
        ./semver2.sh $VERSION_NEW $VERSION_OLD | { read -r var; if [ "$var" -gt 0 ]; then exit 0; else echo "AntiquatedVersionError: downstream version ("$VERSION_NEW") is <= base version ("$VERSION_OLD"). Please update to newer semantic version before merging." && exit 1; fi; }

  build_game:
    runs-on: ubuntu-latest
    permissions: write-all
    name: Build Game
    needs: check_version_bump
    steps:
    - name: Checkout current branch
      uses: actions/checkout@v4

    - name: Export game
      id: export
      uses: firebelley/godot-export@v5.2.1
      with:
        godot_executable_download_url: https://downloads.tuxfamily.org/godotengine/${{ env.GODOT_VERSION }}/Godot_v${{ env.GODOT_VERSION }}-stable_linux.x86_64.zip
        godot_export_templates_download_url: https://downloads.tuxfamily.org/godotengine/${{ env.GODOT_VERSION }}/Godot_v${{ env.GODOT_VERSION }}-stable_export_templates.tpz
        relative_project_path: ./
        archive_output: true

    - name: Upload web build
      uses: actions/upload-artifact@v4
      with:
        name: web-zip
        path: ${{ steps.export.outputs.archive_directory }}/Web.zip

    - name: Create release
      uses: ncipollo/release-action@v1.12.0
      with:
        generateReleaseNotes: true
        tag: "v$VERSION_NEW"
        artifacts: ${{ steps.export.outputs.archive_directory }}/*

  publish_game:
    runs-on: ubuntu-latest
    name: Publish to Pages
    needs: build_game
    steps:
    - name: Install dependencies
      shell: bash
      run: |
        sudo apt-get update && sudo apt-get install -y rsync unzip
    
    - name: Download web zip
      uses: actions/download-artifact@v4
      with:
        name: web-zip
    
    - name: Unzip
      shell: bash
      run: |
        unzip Web.zip
        ls -al

    - name: Deploy to Github Pages ðŸš€
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        folder: Web/
        branch: main
    
